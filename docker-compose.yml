version: '3.8'

services:

  registry:
    image: registry:2
    container_name: private-docker-registry
    ports:
      - "5000:5000"
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
    volumes:
      - ./auth:/auth
      - ./data:/var/lib/registry
    restart: unless-stopped
    networks:
      - backend

  backend-go:
    image: localhost:5000/backend-go:latest
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:password@db/chatdb?sslmode=disable
    restart: unless-stopped
    networks:
      - backend

  backend-rust:
    image: rust:1.79
    container_name: backend-rust-dev
    working_dir: /app
    volumes:
      - ./backend-rust:/app
      - cargo-cache:/usr/local/cargo/registry
      - cargo-target:/app/target
    ports:
      - "8081:8081"
    command: >
      bash -c "cargo build --release && ./target/release/backend-rust"
    restart: unless-stopped
    networks:
      - backend

  frontend:
    image: localhost:5000/frontend:latest
    ports:
      - "5173:80"
    restart: unless-stopped
    networks:
      - backend

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "6543:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

volumes:
  db-data:
  cargo-cache:
  cargo-target:

networks:
  backend:
    driver: bridge
