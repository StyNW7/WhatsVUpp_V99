services:

  registry:
    image: registry:2
    container_name: private-docker-registry
    ports:
      - "5000:5000"
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      # REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      # REGISTRY_HTTP_TLS_KEY: /certs/domain.key
    volumes:
      - ./auth:/auth
      - ./data:/var/lib/registry
      # - ./certs:/certs
    restart: unless-stopped
    networks:
      - backend

  backend-go:
    build: ./backend-go
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://postgres:password@db/chatdb?sslmode=disable
    
  backend-rust:
    image: rust:1.79
    container_name: backend-rust-dev
    working_dir: /app
    volumes:
      - ./backend-rust:/app   # Mount your local source into the container
      - cargo-cache:/usr/local/cargo/registry   # Cache cargo registry for faster builds
      - cargo-target:/app/target  # Cache target dir to speed up incremental builds
    ports:
      - "8081:8081"
    command: >
      bash -c "cargo build --release && ./target/release/backend-rust"
    # Optional: to rebuild on changes you could use 'cargo watch' but you need to add it
    # command: >
    #   bash -c 'cargo install cargo-watch && cargo watch -x run'
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "5173:80"
  
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "6543:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  cargo-cache:
  cargo-target:

networks:
  backend:
    driver: bridge