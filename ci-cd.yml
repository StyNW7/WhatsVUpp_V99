name: Go Backend CI/CD

on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/15 * * * *'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24' 

    - name: Run unit tests
      run: go test -v ./...
      working-directory: ./backend-go 

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Authenticate to GCR
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCR_SA_KEY }}'

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      env:
        PROJECT_ID: ${{ secrets.GCR_PROJECT_ID }}
        IMAGE_NAME: my-go-app 
      run: |
        docker build -t gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:${{ github.sha }}
      working-directory: ./backend-go 

    - name: Deploy to Kubernetes
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        PROJECT_ID: ${{ secrets.GCR_PROJECT_ID }}
        IMAGE_NAME: my-go-app 
        DEPLOYMENT_NAME: my-go-app-deployment 
        KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
      run: |
        echo "${KUBE_CONFIG_DATA}" | base64 --decode > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
        kubectl config use-context $(kubectl config current-context)
        kubectl set image deployment/${DEPLOYMENT_NAME} ${IMAGE_NAME}=gcr.io/${PROJECT_ID}/${IMAGE_NAME}:${{ github.sha }} -n ${KUBE_NAMESPACE}